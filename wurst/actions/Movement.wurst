package Movement
import User
import City
import MoveObjects
import CharterObjects
import InternalUtil

public function enableMovement(User user)
    user.currentLocation.connections.forEach() con ->
        con.enableMovement(MOVE_SPELL_ID)
    user.getCityCards().forEach() card -> 
        card.city.enableMovement(CHARTER_SPELL_ID)

public function disableMovement(User user)
    user.currentLocation.connections.forEach() cont -> 
        cont.disableMovement(MOVE_SPELL_ID)
    user.getCityCards().forEach() card -> 
        card.city.disableMovement(CHARTER_SPELL_ID)
    
public function User.move(unit destination, boolean isCard)
    let city = City.cities.get(destination.getName())
    Log.info("Moving to " + city.name)
    disableMovement(this)
    if isCard
        city.disableMovement(CHARTER_SPELL_ID)
        this.hand.removeIf(c -> c.getName() == city.name)
    this.currentLocation = city
    this.hero.setPos(city.getLocation())




